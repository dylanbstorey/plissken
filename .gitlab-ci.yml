before_script:
  - VERSION=`cat plissken/VERSION`
  - pip install virtualenv
  - virtualenv ~/.venv/plissken
  - source ~/.venv/plissken/bin/activate
  - pip install .[dev]

stages:
  - unit-test
  - release
  - pages

unit-test-py3:
  image: python:3
  stage: unit-test
  script:
    - angreal unit_tests
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  except:
    - tags

pages:
  image: python:3
  stage: pages
  script:
    - angreal docs --no_open
    - mkdir public
    - cp -r docs/build/html/* public/
  artifacts:
    paths:
      - public
  only:
    - tags


    release-test:
      image: python:3
      stage: release
      script:
        - echo "[distutils]" >> ~/.pypirc
        - echo "index-servers=" >> ~/.pypirc
        - echo "  testpypi" >> ~/.pypirc
        - echo "[testpypi]" >> ~/.pypirc
        - echo 'repository=https://test.pypi.org/legacy/' >> ~/.pypirc
        - echo 'username='$PYPI_USER >> ~/.pypirc
        - echo 'password='$PYPI_PASSWORD >> ~/.pypirc
        - python setup.py check sdist bdist_wheel
        - twine upload --repository testpypi dist/*
        - pip install --index-url https://test.pypi.org/simple/ angreal
        - echo "" > ~/.pypirc && rm ~/.pypirc
      allow_failure: true
      only:
        - tags

    release:
      image: python:3
      stage: release
      before_script:
        - VERSION=`cat angreal/VERSION`
        - if ! [[ "$CI_BUILD_TAG" = "$VERSION" ]]; then echo "$VERSION does not match $CI_BUILD_TAG"; exit -1 ; fi
      script:
        - pip install .[dev]
        - echo "[server-login]" >> ~/.pypirc
        - echo "username="$PYPI_USER >> ~/.pypirc
        - echo "password="$PYPI_PASSWORD >> ~/.pypirc
        - python setup.py check sdist bdist_wheel
        - twine upload --repository testpypi dist/*
        - echo "" > ~/.pypirc && rm ~/.pypirc
      only:
        - tags
      when:
        manual


cleanup_release:
  stage: release
  when: always
  script:
    - rm -vf ~/.pypirc
  only:
    - tags
